{"version":3,"file":"wrapper.js","sourceRoot":"","sources":["../../src/js/wrapper.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\nimport type {\n  BaseEnvelopeItemHeaders,\n  Breadcrumb,\n  Envelope,\n  EnvelopeItem,\n  Event,\n  Package,\n  SeverityLevel,\n  User,\n} from '@sentry/types';\nimport { logger, normalize, SentryError } from '@sentry/utils';\nimport { NativeModules, Platform, TurboModuleRegistry } from 'react-native';\n\nimport { isHardCrash } from './misc';\nimport type {\n  NativeAppStartResponse,\n  NativeDeviceContextsResponse,\n  NativeFramesResponse,\n  NativeReleaseResponse,\n  NativeScreenshot,\n  Spec,\n} from './NativeRNSentry';\nimport type { ReactNativeClientOptions } from './options';\nimport type { RequiredKeysUser } from './user';\nimport { isTurboModuleEnabled } from './utils/environment';\nimport { utf8ToBytes } from './vendor';\n\nconst RNSentry: Spec | undefined = isTurboModuleEnabled()\n  ? TurboModuleRegistry.get<Spec>('RNSentry')\n  : NativeModules.RNSentry;\n\nexport interface Screenshot {\n  data: Uint8Array;\n  contentType: string;\n  filename: string;\n}\n\ninterface SentryNativeWrapper {\n  enableNative: boolean;\n  nativeIsReady: boolean;\n  platform: typeof Platform.OS;\n\n  _NativeClientError: Error;\n  _DisabledNativeError: Error;\n\n  _processItem(envelopeItem: EnvelopeItem): EnvelopeItem;\n  _processLevels(event: Event): Event;\n  _processLevel(level: SeverityLevel): SeverityLevel;\n  _serializeObject(data: { [key: string]: unknown }): { [key: string]: string };\n  _isModuleLoaded(module: Spec | undefined): module is Spec;\n  _getBreadcrumbs(event: Event): Breadcrumb[] | undefined;\n\n  isNativeAvailable(): boolean;\n\n  initNativeSdk(options: Partial<ReactNativeClientOptions>): PromiseLike<boolean>;\n  closeNativeSdk(): PromiseLike<void>;\n\n  sendEnvelope(envelope: Envelope): Promise<void>;\n  captureScreenshot(): Promise<Screenshot[] | null>;\n\n  fetchNativeRelease(): PromiseLike<NativeReleaseResponse>;\n  fetchNativeDeviceContexts(): PromiseLike<NativeDeviceContextsResponse>;\n  fetchNativeAppStart(): PromiseLike<NativeAppStartResponse | null>;\n  fetchNativeFrames(): PromiseLike<NativeFramesResponse | null>;\n  fetchNativeSdkInfo(): PromiseLike<Package | null>;\n\n  disableNativeFramesTracking(): void;\n  enableNativeFramesTracking(): void;\n\n  addBreadcrumb(breadcrumb: Breadcrumb): void;\n  setContext(key: string, context: { [key: string]: unknown } | null): void;\n  clearBreadcrumbs(): void;\n  setExtra(key: string, extra: unknown): void;\n  setUser(user: User | null): void;\n  setTag(key: string, value: string): void;\n\n  nativeCrash(): void;\n\n  fetchModules(): Promise<Record<string, string> | null>;\n  fetchViewHierarchy(): PromiseLike<Uint8Array | null>;\n}\n\n/**\n * Our internal interface for calling native functions\n */\nexport const NATIVE: SentryNativeWrapper = {\n  async fetchModules(): Promise<Record<string, string> | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const raw = await RNSentry.fetchModules();\n    if (raw) {\n      return JSON.parse(raw);\n    }\n    return null;\n  },\n  /**\n   * Sending the envelope over the bridge to native\n   * @param envelope Envelope\n   */\n  async sendEnvelope(envelope: Envelope): Promise<void> {\n    if (!this.enableNative) {\n      logger.warn('Event was skipped as native SDK is not enabled.');\n      return;\n    }\n\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const [EOL] = utf8ToBytes('\\n');\n\n    const [envelopeHeader, envelopeItems] = envelope;\n\n    const headerString = JSON.stringify(envelopeHeader);\n    let envelopeBytes: number[] = utf8ToBytes(headerString);\n    envelopeBytes.push(EOL);\n\n    let hardCrashed: boolean = false;\n    for (const rawItem of envelopeItems) {\n      const [itemHeader, itemPayload] = this._processItem(rawItem);\n\n      let bytesContentType: string;\n      let bytesPayload: number[] = [];\n      if (typeof itemPayload === 'string') {\n        bytesContentType = 'text/plain';\n        bytesPayload = utf8ToBytes(itemPayload);\n      } else if (itemPayload instanceof Uint8Array) {\n        bytesContentType =\n          typeof itemHeader.content_type === 'string' ? itemHeader.content_type : 'application/octet-stream';\n        bytesPayload = [...itemPayload];\n      } else {\n        bytesContentType = 'application/json';\n        bytesPayload = utf8ToBytes(JSON.stringify(itemPayload));\n        if (!hardCrashed) {\n          hardCrashed = isHardCrash(itemPayload);\n        }\n      }\n\n      // Content type is not inside BaseEnvelopeItemHeaders.\n      (itemHeader as BaseEnvelopeItemHeaders).content_type = bytesContentType;\n      (itemHeader as BaseEnvelopeItemHeaders).length = bytesPayload.length;\n      const serializedItemHeader = JSON.stringify(itemHeader);\n\n      envelopeBytes.push(...utf8ToBytes(serializedItemHeader));\n      envelopeBytes.push(EOL);\n      envelopeBytes = envelopeBytes.concat(bytesPayload);\n      envelopeBytes.push(EOL);\n    }\n\n    await RNSentry.captureEnvelope(envelopeBytes, { store: hardCrashed });\n  },\n\n  /**\n   * Starts native with the provided options.\n   * @param options ReactNativeClientOptions\n   */\n  async initNativeSdk(originalOptions: Partial<ReactNativeClientOptions>): Promise<boolean> {\n    const options: Partial<ReactNativeClientOptions> = {\n      enableNative: true,\n      autoInitializeNativeSdk: true,\n      ...originalOptions,\n    };\n\n    if (!options.enableNative) {\n      if (options.enableNativeNagger) {\n        logger.warn('Note: Native Sentry SDK is disabled.');\n      }\n      this.enableNative = false;\n      return false;\n    }\n    if (!options.autoInitializeNativeSdk) {\n      if (options.enableNativeNagger) {\n        logger.warn(\n          'Note: Native Sentry SDK was not initialized automatically, you will need to initialize it manually. If you wish to disable the native SDK and get rid of this warning, pass enableNative: false',\n        );\n      }\n      return false;\n    }\n\n    if (!options.dsn) {\n      logger.warn(\n        'Warning: No DSN was provided. The Sentry SDK will be disabled. Native SDK will also not be initalized.',\n      );\n      return false;\n    }\n\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    // filter out all the options that would crash native.\n    /* eslint-disable @typescript-eslint/unbound-method,@typescript-eslint/no-unused-vars */\n    const { beforeSend, beforeBreadcrumb, integrations, ...filteredOptions } = options;\n    /* eslint-enable @typescript-eslint/unbound-method,@typescript-eslint/no-unused-vars */\n    const nativeIsReady = await RNSentry.initNativeSdk(filteredOptions);\n\n    this.nativeIsReady = nativeIsReady;\n\n    return nativeIsReady;\n  },\n\n  /**\n   * Fetches the release from native\n   */\n  async fetchNativeRelease(): Promise<NativeReleaseResponse> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    return RNSentry.fetchNativeRelease();\n  },\n\n  /**\n   * Fetches the Sdk info for the native sdk.\n   * NOTE: Only available on iOS.\n   */\n  async fetchNativeSdkInfo(): Promise<Package | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    if (this.platform !== 'ios') {\n      return null;\n    }\n\n    return RNSentry.fetchNativeSdkInfo();\n  },\n\n  /**\n   * Fetches the device contexts. Not used on Android.\n   */\n  async fetchNativeDeviceContexts(): Promise<NativeDeviceContextsResponse> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    if (this.platform !== 'ios') {\n      // Only ios uses deviceContexts, return an empty object.\n      return {};\n    }\n\n    return RNSentry.fetchNativeDeviceContexts();\n  },\n\n  async fetchNativeAppStart(): Promise<NativeAppStartResponse | null> {\n    if (!this.enableNative) {\n      logger.warn(this._DisabledNativeError);\n      return null;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      logger.error(this._NativeClientError);\n      return null;\n    }\n\n    return RNSentry.fetchNativeAppStart();\n  },\n\n  async fetchNativeFrames(): Promise<NativeFramesResponse | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    return RNSentry.fetchNativeFrames();\n  },\n\n  /**\n   * Triggers a native crash.\n   * Use this only for testing purposes.\n   */\n  nativeCrash(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.crash();\n  },\n\n  /**\n   * Sets the user in the native scope.\n   * Passing null clears the user.\n   */\n  setUser(user: User | null): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    // separate and serialize all non-default user keys.\n    let userKeys = null;\n    let userDataKeys = null;\n    if (user) {\n      const { id, ip_address, email, username, segment, ...otherKeys } = user;\n      const requiredUser: RequiredKeysUser = {\n        id,\n        ip_address,\n        email,\n        username,\n        segment,\n      };\n      userKeys = this._serializeObject(requiredUser);\n      userDataKeys = this._serializeObject(otherKeys);\n    }\n\n    RNSentry.setUser(userKeys, userDataKeys);\n  },\n\n  /**\n   * Sets a tag in the native module.\n   * @param key string\n   * @param value string\n   */\n  setTag(key: string, value: string): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const stringifiedValue = typeof value === 'string' ? value : JSON.stringify(value);\n\n    RNSentry.setTag(key, stringifiedValue);\n  },\n\n  /**\n   * Sets an extra in the native scope, will stringify\n   * extra value if it isn't already a string.\n   * @param key string\n   * @param extra any\n   */\n  setExtra(key: string, extra: unknown): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    // we stringify the extra as native only takes in strings.\n    const stringifiedExtra = typeof extra === 'string' ? extra : JSON.stringify(extra);\n\n    RNSentry.setExtra(key, stringifiedExtra);\n  },\n\n  /**\n   * Adds breadcrumb to the native scope.\n   * @param breadcrumb Breadcrumb\n   */\n  addBreadcrumb(breadcrumb: Breadcrumb): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.addBreadcrumb({\n      ...breadcrumb,\n      // Process and convert deprecated levels\n      level: breadcrumb.level ? this._processLevel(breadcrumb.level) : undefined,\n    });\n  },\n\n  /**\n   * Clears breadcrumbs on the native scope.\n   */\n  clearBreadcrumbs(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.clearBreadcrumbs();\n  },\n\n  /**\n   * Sets context on the native scope. Not implemented in Android yet.\n   * @param key string\n   * @param context key-value map\n   */\n  setContext(key: string, context: { [key: string]: unknown } | null): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    RNSentry.setContext(key, context !== null ? normalize(context) : null);\n  },\n\n  /**\n   * Closes the Native Layer SDK\n   */\n  async closeNativeSdk(): Promise<void> {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      return;\n    }\n\n    return RNSentry.closeNativeSdk().then(() => {\n      this.enableNative = false;\n    });\n  },\n\n  disableNativeFramesTracking(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      return;\n    }\n\n    RNSentry.disableNativeFramesTracking();\n  },\n\n  enableNativeFramesTracking(): void {\n    if (!this.enableNative) {\n      return;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      return;\n    }\n\n    RNSentry.enableNativeFramesTracking();\n  },\n\n  isNativeAvailable(): boolean {\n    return this.enableNative && this._isModuleLoaded(RNSentry);\n  },\n\n  async captureScreenshot(): Promise<Screenshot[] | null> {\n    if (!this.enableNative) {\n      logger.warn(this._DisabledNativeError);\n      return null;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      logger.error(this._NativeClientError);\n      return null;\n    }\n\n    let raw: NativeScreenshot[] | null | undefined;\n    try {\n      raw = await RNSentry.captureScreenshot();\n    } catch (e) {\n      logger.warn('Failed to capture screenshot', e);\n    }\n\n    if (raw) {\n      return raw.map((item: NativeScreenshot) => ({\n        ...item,\n        data: new Uint8Array(item.data),\n      }));\n    } else {\n      return null;\n    }\n  },\n\n  async fetchViewHierarchy(): Promise<Uint8Array | null> {\n    if (!this.enableNative) {\n      throw this._DisabledNativeError;\n    }\n    if (!this._isModuleLoaded(RNSentry)) {\n      throw this._NativeClientError;\n    }\n\n    const raw = await RNSentry.fetchViewHierarchy();\n    return raw ? new Uint8Array(raw) : null;\n  },\n\n  /**\n   * Gets the event from envelopeItem and applies the level filter to the selected event.\n   * @param data An envelope item containing the event.\n   * @returns The event from envelopeItem or undefined.\n   */\n  _processItem(item: EnvelopeItem): EnvelopeItem {\n    const [itemHeader, itemPayload] = item;\n\n    if (itemHeader.type == 'event' || itemHeader.type == 'transaction') {\n      const event = this._processLevels(itemPayload as Event);\n\n      if (NATIVE.platform === 'android') {\n        if ('message' in event) {\n          // @ts-ignore Android still uses the old message object, without this the serialization of events will break.\n          event.message = { message: event.message };\n        }\n        event.breadcrumbs = this._getBreadcrumbs(event);\n      }\n\n      return [itemHeader, event];\n    }\n\n    return item;\n  },\n\n  /**\n   * Serializes all values of root-level keys into strings.\n   * @param data key-value map.\n   * @returns An object where all root-level values are strings.\n   */\n  _serializeObject(data: { [key: string]: unknown }): { [key: string]: string } {\n    const serialized: { [key: string]: string } = {};\n\n    Object.keys(data).forEach(dataKey => {\n      const value = data[dataKey];\n      serialized[dataKey] = typeof value === 'string' ? value : JSON.stringify(value);\n    });\n\n    return serialized;\n  },\n\n  /**\n   * Convert js severity level in event.level and event.breadcrumbs to more widely supported levels.\n   * @param event\n   * @returns Event with more widely supported Severity level strings\n   */\n\n  _processLevels(event: Event): Event {\n    const processed: Event = {\n      ...event,\n      level: event.level ? this._processLevel(event.level) : undefined,\n      breadcrumbs: event.breadcrumbs?.map(breadcrumb => ({\n        ...breadcrumb,\n        level: breadcrumb.level ? this._processLevel(breadcrumb.level) : undefined,\n      })),\n    };\n\n    return processed;\n  },\n\n  /**\n   * Convert js severity level which has critical and log to more widely supported levels.\n   * @param level\n   * @returns More widely supported Severity level strings\n   */\n\n  _processLevel(level: SeverityLevel): SeverityLevel {\n    if (level == ('log' as SeverityLevel)) {\n      return 'debug' as SeverityLevel;\n    }\n    return level;\n  },\n\n  /**\n   * Checks whether the RNSentry module is loaded.\n   */\n  _isModuleLoaded(module: Spec | undefined): module is Spec {\n    return !!module;\n  },\n\n  _DisabledNativeError: new SentryError('Native is disabled'),\n\n  _NativeClientError: new SentryError(\"Native Client is not available, can't start on native.\"),\n\n  /**\n   * Get breadcrumbs (removes breadcrumbs from handled exceptions on Android)\n   *\n   * We do this to avoid duplicate breadcrumbs on Android as sentry-android applies the breadcrumbs\n   * from the native scope onto every envelope sent through it. This scope will contain the breadcrumbs\n   * sent through the scope sync feature. This causes duplicate breadcrumbs.\n   * We then remove the breadcrumbs in all cases but if it is handled == false,\n   * this is a signal that the app would crash and android would lose the breadcrumbs by the time the app is restarted to read\n   * the envelope.\n   */\n  _getBreadcrumbs(event: Event): Breadcrumb[] | undefined {\n    let breadcrumbs: Breadcrumb[] | undefined = event.breadcrumbs;\n\n    const hardCrashed = isHardCrash(event);\n    if (NATIVE.platform === 'android' && event.breadcrumbs && !hardCrashed) {\n      breadcrumbs = [];\n    }\n\n    return breadcrumbs;\n  },\n\n  enableNative: true,\n  nativeIsReady: false,\n  platform: Platform.OS,\n};\n"]}