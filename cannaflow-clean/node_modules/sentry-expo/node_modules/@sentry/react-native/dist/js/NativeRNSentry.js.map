{"version":3,"file":"NativeRNSentry.js","sourceRoot":"","sources":["../../src/js/NativeRNSentry.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAwFnD,2DAA2D;AAC3D,eAAe,mBAAmB,CAAC,YAAY,CAAO,UAAU,CAAC,CAAC","sourcesContent":["import type { Package } from '@sentry/types';\nimport type { TurboModule } from 'react-native';\nimport { TurboModuleRegistry } from 'react-native';\nimport type { UnsafeObject } from 'react-native/Libraries/Types/CodegenTypes';\n\n// There has to be only one interface and it has to be named `Spec`\n// Only extra allowed definitions are types (probably codegen bug)\nexport interface Spec extends TurboModule {\n  addBreadcrumb(breadcrumb: UnsafeObject): void;\n  captureEnvelope(\n    bytes: number[],\n    options: {\n      store: boolean;\n    },\n  ): Promise<boolean>;\n  captureScreenshot(): Promise<NativeScreenshot[] | undefined | null>;\n  clearBreadcrumbs(): void;\n  crash(): void;\n  closeNativeSdk(): Promise<void>;\n  disableNativeFramesTracking(): void;\n  fetchNativeRelease(): Promise<NativeReleaseResponse>;\n  fetchNativeSdkInfo(): Promise<Package>;\n  fetchNativeDeviceContexts(): Promise<NativeDeviceContextsResponse>;\n  fetchNativeAppStart(): Promise<NativeAppStartResponse | null>;\n  fetchNativeFrames(): Promise<NativeFramesResponse | null>;\n  initNativeSdk(options: UnsafeObject): Promise<boolean>;\n  setUser(defaultUserKeys: UnsafeObject | null, otherUserKeys: UnsafeObject | null): void;\n  setContext(key: string, value: UnsafeObject | null): void;\n  setExtra(key: string, value: string): void;\n  setTag(key: string, value: string): void;\n  enableNativeFramesTracking(): void;\n  fetchModules(): Promise<string | undefined | null>;\n  fetchViewHierarchy(): Promise<number[] | undefined | null>;\n}\n\nexport type NativeAppStartResponse = {\n  isColdStart: boolean;\n  appStartTime: number;\n  didFetchAppStart: boolean;\n};\n\nexport type NativeFramesResponse = {\n  totalFrames: number;\n  slowFrames: number;\n  frozenFrames: number;\n};\n\nexport type NativeReleaseResponse = {\n  build: string;\n  id: string;\n  version: string;\n};\n\n/**\n * This type describes serialized scope from sentry-cocoa. (This is not used for Android)\n * https://github.com/getsentry/sentry-cocoa/blob/master/Sources/Sentry/SentryScope.m\n */\nexport type NativeDeviceContextsResponse = {\n  [key: string]: unknown;\n  tags?: Record<string, string>;\n  extra?: Record<string, unknown>;\n  context?: Record<string, Record<string, unknown>>;\n  user?: {\n    userId?: string;\n    email?: string;\n    username?: string;\n    ipAddress?: string;\n    segment?: string;\n    data?: Record<string, unknown>;\n  };\n  dist?: string;\n  environment?: string;\n  fingerprint?: string[];\n  level?: string;\n  breadcrumbs?: {\n    level?: string;\n    timestamp?: string;\n    category?: string;\n    type?: string;\n    message?: string;\n    data?: Record<string, unknown>;\n  }[];\n};\n\nexport type NativeScreenshot = {\n  data: number[];\n  contentType: string;\n  filename: string;\n};\n\n// The export must be here to pass codegen even if not used\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNSentry');\n"]}